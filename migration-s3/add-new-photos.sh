#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ S3
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ü–û–°–õ–ï –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
source "$(dirname "$0")/config.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–ø—É—Ç—å_–∫_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º> [–æ–ø–∏—Å–∞–Ω–∏–µ]"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 /path/to/new/photos"
    echo "  $0 /path/to/new/photos \"–§–æ—Ç–æ –∏–∑ –ø–æ–µ–∑–¥–∫–∏ –≤ –°–æ—á–∏\""
    echo "  $0 ./new-photos"
    echo ""
    echo "–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ S3 –∏ —Å–æ–∑–¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å—Ç."
    exit 1
fi

photos_path="$1"
description="${2:-–ù–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "$photos_path" ]; then
    error_log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $photos_path"
    exit 1
fi

log "–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π..."
log "–ü—É—Ç—å –∫ —Ñ–æ—Ç–æ: $photos_path"
log "–û–ø–∏—Å–∞–Ω–∏–µ: $description"

# –ü–æ–¥—Å—á–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
image_files=$(find "$photos_path" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.gif" -o -iname "*.webp" \) | sort)
total_images=$(echo "$image_files" | wc -l)

if [ $total_images -eq 0 ]; then
    error_log "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $photos_path"
    exit 1
fi

log "–ù–∞–π–¥–µ–Ω–æ $total_images –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"

# –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è —ç—Ç–æ–π –ø–∞—Ä—Ç–∏–∏ —Ñ–æ—Ç–æ
batch_prefix="batch_$(date +%Y%m%d_%H%M%S)"
uploaded_files=()
failed_files=()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
upload_single_file() {
    local file_path="$1"
    local filename=$(basename "$file_path")
    local extension="${filename##*.}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    local base_name="${filename%.*}"
    local s3_filename="${base_name}_${batch_prefix}.${extension}"
    local s3_key="images/$s3_filename"
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ MIME —Ç–∏–ø–∞
    local mime_type=""
    case "$extension" in
        jpg|jpeg) mime_type="image/jpeg" ;;
        png) mime_type="image/png" ;;
        gif) mime_type="image/gif" ;;
        webp) mime_type="image/webp" ;;
        *) mime_type="application/octet-stream" ;;
    esac
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
    if aws s3 cp "$file_path" "s3://$S3_BUCKET/$s3_key" \
        --content-type "$mime_type" \
        --cache-control "max-age=31536000" \
        --metadata-directive REPLACE; then
        
        uploaded_files+=("$s3_filename")
        log "‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ: $filename ‚Üí $s3_filename"
        return 0
    else
        failed_files+=("$filename")
        error_log "‚úó –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: $filename"
        return 1
    fi
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
log "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ S3..."
uploaded_count=0
failed_count=0

echo "$image_files" | while read -r file; do
    if [ -n "$file" ]; then
        if upload_single_file "$file"; then
            uploaded_count=$((uploaded_count + 1))
        else
            failed_count=$((failed_count + 1))
        fi
    fi
done

# –ü–µ—Ä–µ—Å—á–µ—Ç –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
uploaded_count=${#uploaded_files[@]}
failed_count=${#failed_files[@]}

log "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $uploaded_count —É—Å–ø–µ—à–Ω–æ, $failed_count –æ—à–∏–±–æ–∫"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
accessible_files=()
for filename in "${uploaded_files[@]}"; do
    file_url="$S3_BASE_URL/images/$filename"
    if curl -s -I "$file_url" | grep -q "200 OK"; then
        accessible_files+=("$filename")
        log "‚úì –î–æ—Å—Ç—É–ø–µ–Ω: $file_url"
    else
        error_log "‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $file_url"
    fi
done

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å—Ç
if [ ${#accessible_files[@]} -gt 0 ]; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å—Ç..."
    
    # –§–∞–π–ª —Å –≥–æ—Ç–æ–≤—ã–º –∫–æ–¥–æ–º
    code_file="./migration-s3/ready-code-$(date +%Y%m%d_%H%M%S).md"
    
    {
        echo "# –ì–æ—Ç–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å—Ç"
        echo ""
        echo "**–û–ø–∏—Å–∞–Ω–∏–µ:** $description"
        echo "**–î–∞—Ç–∞:** $(date)"
        echo "**–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:** ${#accessible_files[@]}"
        echo ""
        echo "## –ö–æ–¥ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏"
        echo ""
        echo "\`\`\`markdown"
        echo "{{< gallery >}}"
        for filename in "${accessible_files[@]}"; do
            echo "{{< figure src=\"$S3_BASE_URL/images/$filename\" >}}"
        done
        echo "{{< /gallery >}}"
        echo "\`\`\`"
        echo ""
        echo "## –ö–æ–¥ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
        echo ""
        echo "\`\`\`markdown"
        for filename in "${accessible_files[@]}"; do
            echo "![–û–ø–∏—Å–∞–Ω–∏–µ]($S3_BASE_URL/images/$filename)"
        done
        echo "\`\`\`"
        echo ""
        echo "## –ö–æ–¥ —Å figure shortcode"
        echo ""
        echo "\`\`\`markdown"
        for filename in "${accessible_files[@]}"; do
            echo "{{< figure src=\"$S3_BASE_URL/images/$filename\" alt=\"–û–ø–∏—Å–∞–Ω–∏–µ\" >}}"
        done
        echo "\`\`\`"
        echo ""
        echo "## –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏"
        echo ""
        for filename in "${accessible_files[@]}"; do
            echo "- $S3_BASE_URL/images/$filename"
        done
        echo ""
        echo "---"
        echo "*–ö–æ–¥ —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º add-new-photos.sh*"
        
    } > "$code_file"
    
    log "–ì–æ—Ç–æ–≤—ã–π –∫–æ–¥ —Å–æ–∑–¥–∞–Ω: $code_file"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞
    echo ""
    echo "=== –ì–û–¢–û–í–´–ô –ö–û–î –î–õ–Ø –í–°–¢–ê–í–ö–ò ==="
    echo ""
    echo "{{< gallery >}}"
    for filename in "${accessible_files[@]}"; do
        echo "{{< figure src=\"$S3_BASE_URL/images/$filename\" >}}"
    done
    echo "{{< /gallery >}}"
    echo ""
    echo "–ü–æ–ª–Ω—ã–π –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $code_file"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
report_file="./migration-s3/upload-report-$(date +%Y%m%d_%H%M%S).txt"
{
    echo "–û—Ç—á–µ—Ç –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
    echo "=========================="
    echo "–î–∞—Ç–∞: $(date)"
    echo "–ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω—ã–º —Ñ–∞–π–ª–∞–º: $photos_path"
    echo "–û–ø–∏—Å–∞–Ω–∏–µ: $description"
    echo "Batch prefix: $batch_prefix"
    echo ""
    echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "- –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $total_images"
    echo "- –ó–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: $uploaded_count"
    echo "- –û—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏: $failed_count"
    echo "- –î–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ CDN: ${#accessible_files[@]}"
    echo ""
    echo "–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    for filename in "${uploaded_files[@]}"; do
        echo "- $filename"
    done
    echo ""
    if [ ${#failed_files[@]} -gt 0 ]; then
        echo "–§–∞–π–ª—ã —Å –æ—à–∏–±–∫–∞–º–∏:"
        for filename in "${failed_files[@]}"; do
            echo "- $filename"
        done
        echo ""
    fi
    echo "–ì–æ—Ç–æ–≤—ã–π –∫–æ–¥ –≤: $code_file"
} > "$report_file"

# –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
log ""
log "=== –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ==="
log "–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $total_images"
log "–ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤ S3: $uploaded_count"
log "–î–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ CDN: ${#accessible_files[@]}"
log "–û—à–∏–±–æ–∫: $failed_count"
log ""

if [ ${#accessible_files[@]} -gt 0 ]; then
    log "üéâ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê! –ù–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ S3."
    log "–ì–æ—Ç–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø–æ—Å—Ç: $code_file"
else
    error_log "‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –ó–ê–ì–†–£–ó–ò–¢–¨ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ S3."
    exit 1
fi

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
echo ""
echo "=== –ò–ù–°–¢–†–£–ö–¶–ò–ò ==="
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞: $code_file"
echo "2. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –≤ –Ω—É–∂–Ω—ã–π –ø–æ—Å—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ content/post/"
echo "3. –ò–∑–º–µ–Ω–∏—Ç–µ alt-—Ç–µ–∫—Å—Ç—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
echo "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ—Å—Ç –∏ —Å–æ–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç"
echo ""
echo "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "  $0 /path/to/more/photos \"–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ\""